<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxISEBUQEBIQFRUXFhcVFRUWFRYXFxgWFRUXFhYVGBUY
        HSkgGBonHRcWITEhJSkrLy4uFx8zODMsNygtLiv/2wBDAQoKCg4NDhoQEBcrJR0dLS0rLS0tLS0tLS0t
        Ky0tLS0tLS0tLS0tLS0tKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS3/wAARCACoASwDASIAAhEBAxEB/8QA
        HAAAAQUBAQEAAAAAAAAAAAAAAAIDBAUGAQcI/8QAPRAAAgECBAMGAwYEBgIDAAAAAQIRAAMEEiExBUFR
        BhMiYXGBFDKRQlKhscHRByOS8BUzYnLh8UOCFkSi/8QAFwEBAQEBAAAAAAAAAAAAAAAAAAECA//EACAR
        AQEBAQACAgIDAAAAAAAAAAABEQISITFRE3EDQWH/2gAMAwEAAhEDEQA/APcaKKKAooooCiiigKKKKAoo
        ooCiiigKKKKAooooCiiigKaxN8IuZsx20VSxJJgAAa7mna8U7dds7mJxq4bDZhZtOVJzQtw/LcZhGq7g
        ehPPQz11keyLeJKlRKMJnUEaSNPwjzppMcDeazBGUAzB12mDEfaXY86897NcWvW8OiKgMXitsyAEUy2X
        Y7qNo5xIkEWXHcX8SXZbLk21ypbygs10kgOx1GVY0859rjHm2SYjvEm2YI5GNxIgxPTlT5vKGCFlzESF
        kSQOcVQ9nsSxsGzilZHQZCXPidAsLcLHmRues07jDctotqybbXPEZcMQqiSFiSRpKhiT7zTGp0vKKz/+
        L3Ce87pctv8AzFz/AMwb53QAQy8oMEwT0m6wuKS4CUJMGDIIIPoQD5zzmo1LKeoooooooooCiiigKKKK
        AooooCiiigKKKKAooooCiiigKKKKAooooCiiigKKKKAooooCmsViEto1y4yoigszMQFVRqSSdhUHtBx6
        xgrJvYh8o2UDVnb7qrzP9mK8I7ZdpcXxVmWQllTKYdSSJ+y90geNpHkF6TrRnrqRadrP4k4jGMbeCzW8
        OWKLpFy7pq7E/IvQeYnUwE9jrNm2C+NRmZmhjAKqCwCktM76xB3rOcMwJtWwzuqMVmWkqsnS3CsGLtHl
        AyzV/h8UzIbFyyRGuVRlkJzHqDPXfpWnG3Wh4h2hwbYS5btJdSdVbINACDmHi0MajWa0PYDCYiVvM6i0
        bUhJZmcOxZHb7IMe+prIYJb9q53b2bLjKMpdMy6uSVLAARsSN/OvRexLObVxnFsDvDoiBVDfbA1M6+e8
        0q8+6tuLKoQuwbTmsTqfMgR/Y1qE3CLZDYfOfGCzyizBJiDEaEneTB8hFydp/DSuisut5lVWB4dbtAW7
        rLcdizePJqYAhVjYKAOe2pO9WVmyqzlG5k6k6xHPyA0pF+wrxM6EHl9lpG46jen6LIKKKKKKKKKAoooo
        CiiigKKKKAooooCiuUUHaK5RQdorlFB2iuUUHaK5RQdork0TQdrhMamqPtN2qw+CX+Ywa4QStoMAxA+0
        Z+VfM+07V4z2j7V47iBJdzZwysPAnhDawFadXaevhHQRRjrucvXuNdtcLYBhu9YCYSI0/wBR0Ptp6V5d
        x7+JuNuuRabuLZAhUU95/uzkH2gEGqsYVnVS11UMmVB1InQFpDTH57VJw2ADuFyLnOhZZaenSegB2quN
        /k6qKcZdxxC3heuuBlW5cIJiZgplMDzGvlWq7Jdn3w7PemzdlCDbKsFAgwocW9NTvFaPg/ZVLNssQucq
        cu4gx+fnU7F8RVstj4S+wbwkC2MoXYyxOWPKdaLJ9sx2otBcPaRbTIWIVrbNmU/M4KvPi1nodaquB4e4
        jC7eClCcpmIyg5GWCflILCR5a9dnxbCB8G6Wx8inIGEFSg03EgxKg+YrL9m8LceznvnwG4O5gk5iIzZm
        6TqeutUXWL4Fcj+Xdyo3yyuaPETsdGPmRrNSP4YcSm5icJmZhbIZGYZc3iZLkLOkMv8AelX9pQ2GBM+G
        Z8utZq3aTh+JtYoDJZOa3egaKt05u8I3/wAxUn1NGp6uvRIpqxiFecpmDB0I1357jz2NOKwYSpBBEgjU
        EHYjqK5asqs5VUSZMACSeZ6msuxdFFFAUUUUBRRRQFFFFAUUUUBRXCYqJisZl0HPrQ1KZ4qC+PE8qpcf
        xa4rwniE60q1Za8O8IieVXHO9fTSzXZpGauZqjocmiabz0k3RRD00TUZsQKbbFihqbNczVU4njFq2CXu
        IoG8sBVTc7b4Mf8AnX1gx9Yonk1ZuUk3hWKbt3hjcNtbinzn9KfXiPen/MkcgIA/DeriXtoMXxZE6sei
        ifx2rK8Y4/i2lbeSyvVQXufVgFX6e9S9aYx+Y22yAF40B61cYvVrzPjlh/G7BldpJcnvLpC7tMGTHLz5
        1U8Nv3wwSe+2fu3TJcRNlYeHKG56xtp1rdY/EJGW6p6EQZBM7rEj1E1m8VhU8MPCyMrW2icv2XAjMBHl
        51K5rfg3DTcuBEALNpJ5AVu8D2YtWiHYlnEEcgCOkRXnvAL/AMPjBie8aD81stKtpAZCT4THLb869f4d
        eR0F1SGDbVNa5ymrc3CcsbnXp7U+mDIGre5/YRUa4/d3Mw+VtCPPrUlsRVbZ3iPDJxdy8bjPb7tEXDga
        C4ksXnmdRpFUXDL045sOzKA8XVgZcz65jl0ylgVcgcya1Qwltbl10BzXXDvJJBK20TQch4VGlZ3tTwi6
        DZxFsZu5uq0j/NW27QyZvtprImCAI13FZny1/D1Pd922pM9PxgRNZjtIwuWL2HvFcxkCFnKrNFoqD9oZ
        Scx0BRjsKv0xvgV4mTqRyPnVR244D8TYIA8UyCNCCylC39JYe9Fpz+D+MZ+Hd07hms3HtzM+Gcy6wJAz
        ET5VuK8Y/g9jVwuKfBvANwlXEzF5JyifMB999K9nqV05uwUUUVGhRRRQFFFFAUUUUBXCa7VbxPGBFJ5C
        iW4TxDiaJMmTyFZjiuPuFg2XTl5etRuO4t7zRZDA7bf3pUPB4Frn8o3H38Z/MCtOV61Z3uJKq+EZmPIa
        61GTEY0jwlVHIRV5bwVu2oCKNKjXcSoMEgUZXF3i9td2FRX48Psqx/D86yr8QtL5+gqJf4mW0RYHr+1M
        b8q0fEO1K2xLvaT1OY/QVUv2yDCV7xummQH2OtVB4etyCyTrPMVPw2A+6FEaGjO0i92oxJ+Swfdqg4ni
        nEL3gVVsTu7ENHsD+lX1vhw+04qdZsWR5+tB5fjezmNuXAty73i7l1kD+krUXF9hsQzqG766BuwUwBvA
        BFey2bqAaKBS/jVnLInTQbwTAMdPOphjxLF9isUH/lWb2modgVBPmK0HA+zWOkZi1uOhj/uvUhe1iud5
        J25HXT0jXn+1DxVfD+G4lAA7hx5wT9dKcvFhpHv7x71Nw1u5lHekSPuExMmOk6EUrBspzBVIEnUgQ2vL
        qJ0qrjM8fw5NvxWywOmZTBAO/i/Q6Gsc+EVLZQElNobUjWRIbpyPlXpuNuZWGTKJkHppoQeQ32nlVTxH
        hFq8pIAU67fKY3mPlqWMWPP1tEgo3QRroQJ1g7/jU3gPa65gbpRiWsaBl5qeqnnH/FKx/Crlk8yNxOse
        h5iqGxg3e5Og1knQ+8c/TnRmeq9o+OXE2M9lgQwlT0PKR+lAx0AB4DEaisT2d4k1tpOUDRWCwFMaBvfr
        7HqNNxCyt5Ay6wQw1I25SNudVvdTviSHMEaFCCdhmaOXtUnE40ReaIyAmG0DCNRPLX8xWYuY5bVpvCI0
        gxzUghXHLbfY13j+F73DtbS4y52BI0KtbyhsnmJ09/KhqdgsQbtgXhlGjfISVJBhiOuqz/3V9wbEh7RU
        zKmI6QBp5c6804X2nezgu+OQFwha2mV+87tWtu5tmGttFtdRM+fJztFxjEhc2Dt3xKC63dwwe3IYXEdJ
        LIROwG+u1GtU/wDEFLavcxdq6Ld23dFsIpynOksGuDdtNuk/T1r+HPHbmN4favXh/M+Rz94iIb3BHvNe
        GJZOOxAbFAPduPC3Y3thZGg0mcwnqBvXt38NOHNZwClwV7xjcVCCMqQqosHbRZ/9qX4Xi+2srtcorLq7
        RRRQFFFFAUUU1fvBRQMY7E5RlXUn8Kpr2AzghmJ5+U1OuuN2PtVdxHjFqwhe66qo6mrHPqk2eHFTJYf8
        UjEXrGGUsxUeZ3NYrjP8TE1XDiT947fTnWZOJvYlu8csRvLaAegqud6bHifbCTltrA+8enWKz+JdrjF5
        Yz1rmGwpPyqW/wBR+X/mpnwvVj7aUYvtG+NRRJNH+LqPlE1jcDxARFzb3O/KI/OpOdjD29B5nz89qrbY
        JxhyOlO/HP8AUis9hsSWA3HmBImfp+NXC6rI3g/3FBZ277HnU+1ciJPlVJwxGQEHNGkEsWMnffYfvV3a
        BjwxPL1oRNtSwEaAjWRruNIPlNTLVrxn550M8o2yj6T7+dM4cSBNTkFRqHbaiZ5jT/illJGhE8j05fvT
        TPliFJkkmBtAkk+dJGMYzltPoJOaFGwMc9dfwoaicWufKULsCxUqjZZcqMgYjWN9PMaVNwNshAvdhRsF
        BhVUaggQI3iIG1V2LxrBbdtjaUuQXYnwrEEgGfE5MH0mpPEsXcNjNYCOxIEZgAwGpyE6T0zQOXMGiRS8
        SwL2brZLmVXbOCDJVnPiJVvCTB09RShw42x3ma5eBglgXYwAdgSecagc9qusTbL2gXEGALgKqdD8wB6d
        d9qhHiIVFFrLA8LjoVOVgGGiERsdNasYsQr2Uor5gbZgFSPlaNiZOUnkapsfwZQxa3BPPTX8PzqwxGO8
        fhUDMMhBGjToQw9fpUbEYy4GdbQkiRlcE92YJGbbMum43y1cZ2Kk28skSRz6g9D+9S8Bxl7JAiQfsnSR
        1B5Gk8AsXr9nvrsI2sECc2p6aR+/Kk4iwEJDADXUfYJ6qfsn+/Ksr8LfEst6LlrN1ZOumqkbGROh39QK
        qe0PaJ7djv7Chmswb1ppM2zoSDEgf6uUGdiK5hkdZKu2mzfaQ/db7y+v16GNbOwcqEvCfEPlYHRhH2lO
        xHpOoBousdxbj9rv7N2yS1lcOqi2SJXU5gY1zCBvJgdCK138Ke1ua/bwFwEqqObZAzAWxJymBMDVfQCs
        pxbsccrX8MDEHvLI1KTuyj7Vv8Rr7J7B4+zhsXae4fmU28wJGQ3Cseg8IE/6iarcxouznA7n+I91bUm0
        ryTBCKtv5SNPDuQIidN4r2zhuNW4kgQQSrKd1I5ekQQeYINZLjnaS3g7IziS2ltARNxonUk6jrVJwHiz
        Ymzex1sphcUGCZndjh72Wci3E5blcy+IRvGlStc+q9UDUqstZ7UWLaquMe3ZuwO8XNmRWKgkC4BDRI1/
        KrGxxjDXRNvEWm9HH71lvyi5muTUFCDs8+4NLg/eoeSXmrheoTlvvx7U09vq5NU8jmP4qloSTJ6DU1ge
        0PavEAlktwOU8vOti+Ht7mKgYrB2WOuU+01Y59W1gz2uxbrlsWGZ+bH5ZqkvdncZi3z4u96KNh6CvTGw
        Nkalm+qqPpUV8VhlEhkgcyw/Oqz+2Ow/ZG3a1CZj95tfotWWG4K5OqyB97QewqzHaCyfkuW+hjMx8oIF
        Ix2NK2+8/mFdxAYT0kUZ9G/8MbY3FHktM3bOHU5WZp9azl/iuKZGayoTWGGQyoOupMwY15VXWMP3471W
        t3J0LM8GeYgmifpkXwVxFDkZmGjLJErzGm/pSMDxTUDK8GPz2B51cY12QjKubwjWYkxvtVPeu6z3ZQ6z
        lO/nqImjo1uAMtoRDDTrB6/Q1eC1KZTt/uMyPOvMrPErqSwZio+ywIgjUDwjT61oeDcVxcl772+7UEuk
        gnL6jb60MX+BvWr142A19GUzlFy4pKgxnWDBWa1FjOFZC2bSFYxmbqpCxqOorKvxmxYi6is5efEDEDTc
        tpVx2d4wcQCyW4RTGZjqxOpyiPOKI1WAVgoBIkAaAaDQAgeUg1YidIPPX01/WKo8HhT3rXWIP3N5Ucxq
        YA9Brzq27sPo2oBVhqRqDPL2qLDgbu1eA5kkgAFiJj5frMetdwdpraqAMzTDNBEqOsyZPPzk03cvwUTO
        FZiYzA6xuOk6jSu4a7cOdW+aTGadNJWIOqcpEUDdy4O5VETLLZcuvh3zT1GvPSTvsamYXBd2FTPPjLeK
        JO8AaRt+R9aBYVyc+r5RPRSeY9f0pq3kYiDmKfIWJ8XJiTzkwNelA7xPiBtqCiC4WmAXVF85ZthVS/CV
        MEoEV1YXAniUTESY8QAJEHkI2qbxgRbEpGh00MTuNx1/63prs6rLaZLmdw11jJAkBzKqQo0AELPlyqpf
        dys/iVZW7vKFcHLzMHSMpPKD+NXq4ezcuNmkMyCYXfONzoYIidQI360z2svCzct4jIzZQc4VQxyIQ0kS
        NPOnrFj4hUxKXDGrIVypKt9kPlkD8DrM1dYnOWoKqiMMOjO9weEg23METBzBcoEDqPWsz264q1kLZtqX
        f7RA02+Ue9es2joPSol3g9lzmuW0ZpOscp0qa34PL+C2MQ6C4ttlgbdOoHl5HSpV2XBUoWnRkXQ+qiQV
        YeRHlO1eq4fDogyqqgdAKrOK9m7d7xL4X5EaVNXwry9b5tjMlw3E2zRluIea3EIBn2HmOZjY3gGGxIJB
        Fq9M5iPA3MrcA1BP3t9dZrY4vhF6y037bXE5sBOnUjr571ExWFzjMqrdQCJTwXljkQdG9DFGMxh+0N++
        VsWMZbICA2+9LcmIIuLc2MZV8XrMGplnG2/h7zgXA2UIECnuy5+ZiI0P2gBrr9dDbBgohW4v2rbL4ve0
        35io+Awdm257vPZDCLloy9ph5o3iQjlBPSNoau/a44wlm1w7AjD2GfvWt+BAMzkrmuZtNSSDJJBGtUvE
        mw9pluJdu2bbSJU5+7cRKXLchx0567gVCXguOS+l/DXFuG3mNuLswCT4e6aBqGM7fLvMVWcSGKV7j3sj
        3LnidTayiZmIYamNARr59KXGkv8AE79oKRibLqfkYgaz0mJ6aTUixxrFFfBm03ys2gPMKfm5+VROB20t
        4Vb2JY4dbh/lnR1uApmEqJDGNgddKzw7UyyK7rbAGpW25g8h3YMQZOo6VMT29B4dxdnYhsQymDA3gDm7
        sMubyAqVwjGi61yyuKVriNqjsQx0DaRuIO4rAYzidk2HZbqveiFtZbgbMeeVkEjyqmx1jFJdt3bli9YL
        Kv8AMIZQT97Oo8BjluKRY9MuYrEPjXw02lKqHXOGCupicjrDSCfOpz2JEPhyzD7mJfX+r9qz/ZH48q17
        4kPPV0fIo5AkeGtX2Z43cvd4LuqqYW6SpV+uWFExtO1FkQ8Nh3xDtZuWhbAGim9mPuFE1Yv2ZQZe8CvG
        ijWPUgDX3qxtYnu2JVF13MAE1NTHod4Bo1JFVb4VAIVLSD/Tbyz9RUi3h1KQUGu4bX9YqacWn3gaRfQs
        JtxPnRcYq/2BRO8NvEXraXNWSQUJO8jnvVSOwATwqyMN5Ej8J0rWcUxV0W2EKT0zRWes4m5lH8q/7BiP
        rVYuMI1maYvcOVvLr51LFLU0VDbgqFcu3p+FTeH8JRR4grbASo0iefOnkNSrRoYnYcaVYYZjVdZap1l6
        hi0tPpEx5jlUpLn3SM8Dc6ETPn/Zqstmptr2mhidjW/lkgSy+JdY8Q2PpUJbl0MuckgRnIDJJIJ88oki
        NZ+lSrL1ItfMW5mPwotmmbjl/wDLAyto8k5vDoI30686ewOFg5nAAEhAQDCrsdvDvMU8oEzGv9/WnMoJ
        k70TxGJtgoVgtJByyOWvM7afjUHG3zaVsQiZygylEEuUVhmOUHxEa9fKrBUEzz9T6VH+GKMXXM2xykj0
        MEidtdTvRbGQ4l2gFxi7XB4lIXDgKz7QASD/ALtOvOAKueApjcQVfExasL8tkfMwG3eHePLnV0ELMDlA
        B1bMBm9B/wB1OSAIFNSc/Z4U4tMg0tTUbPqacU0wppxWo0eFQ8Rwiw5zG2A33l8J+o3qUGpQNBUYzsvY
        ujxiY2J+YejCDVViexR+xdzDktwZo9H0YfWteDSgaanjHnGK7MXk1Ct7eIfoajd7iLWneadH/ZxH416j
        NN3cOjaMqn1FGfxz+nlFzj1swl2zhLnlkRtfUZgPpTz4rB3WzXsHZLQBma2H0GgEiDHlFbvGdlMHc1ay
        oPUaH61V3uwVn/x3Li+RMj8aazeOlNw5sHbuG7Zs4dbh0LAurH+qrDiXEke0UvAhDoSHdf8A9pBH1pLd
        hrnK8p9QaSvYvEL8txB6Fh+VXTOvpGwV/CoALXw4jaWDH8TJqf8AEKTJj/1DD8hTX/w/Ene8n1Y/nUi3
        2TxI/wDsgeiL+tNM6+ikvjlPuf3pRbNpv7/tTidmbw3xFxvUgD6IBUd+xl1ml8U8fdAMfnr701c6KJC/
        MwHqx/WomJ41bTSc39P6kVY2ew1kfPcuN9B+lWWC7M4W0ZW2J6nU/Wmnj0zGI4ioUM7ZQflUL4j6Cdag
        tisU2tvDtl5Zlcn8xXo1vB21MhFB6wJ+tP1NX8f+vnMUoGkClA1pD6NUi21Q1NPI1BYWnqZauVVW3qVb
        uVBb2rtTLV2qa3dqXbu0FzbvVJS7VPbvVJt3qKt0u06tyqtL1PpdoLEPTgeq9btOLdoJ4elBqhLcpwXK
        CYGpYeoYuU4LlRUxXpwPUIXKcW5RUwPTgeoQuUsXKCYHpQeoguUoXKKlhq7nqKLld7yipWejNUbvK73l
        BJzUZqjd5R3lBJzUZqj95XO8qCTnozVG7yjvKCRnoz1G7yuG5QSc9cz1GN2k97QeA10VyituJwGlqaaB
        pQNFSEan0eoStTqtQWFu5Ui3dqsR6fS5UFrbvVJt3qqEu0+l6gt0vU+l6qhL1PJeoLdL1PLeqoW9Ty3q
        KtVvU6t6qlb1OreoLVb1LF2qtb9OLeoLQXaWLtVYv0sX6KtBdpYvVVi/SxfoLQXqUL1VYv0oX6gtBerv
        fVWC/Xe/ourPvq731Vnf13v6GrLvq731VnxFHxFDVn31c76q74iud/Q1Zd9XO+qt7+ufEUNWXfUk3qrj
        iKScRQ1ZG/Se/qsOIpPxFDXktFFFVzdroNFFUdBpQNdoopatTivRRQOrcp1blFFQPLdp1b1FFA6t6nVv
        V2igcW9Ti3qKKBxb9LF+u0UChfpYv0UUUsX6UMRRRQKGIpQxFFFB34ilfEUUUHfiKPiKKKA+Io+Ioooo
        +Io+IrlFAfEVw4iiigScRSTiKKKBBxFJ+IrtFEf/2Q==
</value>
  </data>
</root>