<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>