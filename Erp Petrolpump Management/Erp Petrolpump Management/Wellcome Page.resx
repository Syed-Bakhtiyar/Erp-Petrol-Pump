<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>